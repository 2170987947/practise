class Solution {
    public int[] spiralOrder(int[][] matrix) {
        if (matrix == null || matrix.length ==0 || matrix[0].length == 0) {
            return new int[0];
        }
        int[] arr = new int[matrix.length * matrix[0].length];
        int index = 0;
        int left = 0;
        int top = 0;
        int right = matrix[0].length - 1;
        int bottom = matrix.length - 1;
        while (left <= right && top <= bottom) {
            for (int col = left; col <= right; col++) {
                arr[index++] = matrix[top][col];
            }
            for (int row = top + 1; row <= bottom; row++) {
                arr[index++] = matrix[row][right];
            }
            if (left < right && top < bottom) {
                for (int col = right - 1; col > left; col--) {
                    arr[index++] = matrix[bottom][col];
                }
                for (int row = bottom; row > top; row--) {
                    arr[index++] = matrix[row][left];
                }
            }
            left++;
            right--;
            top++;
            bottom--;
        }
        return arr;
    }
}
//runtime:0 ms
//memory:43 MB
